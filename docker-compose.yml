version: '3.4'

services:
  api:
    build:
      context: .
      dockerfile: ./Dockerfile
    ports:
      - 3100:3000
    depends_on:
      - redis
      - postgres

    networks:
      - default
    command: pnpm start:prod
    environment:
      - JWT_SECRET=${JWT_SECRET}
      - JWT_REFRESH_SECRET=${JWT_REFRESH_SECRET}
      - REDIS_HOST=redis:6379
      - REDIS_TTL_MS=${REDIS_TTL_MS-:5000}
      - POSTGRES_HOST=postgres
      - POSTGRES_TEST_HOST=postgres-test
      - POSTGRES_PORT=5432
      - POSTGRES_TEST_PORT=6432
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - ./assets:/app/assets:rw

  postgres:
    image: postgres:15-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - ${POSTGRES_PORT}:5432

  postgres-test:
    image: postgres:15-alpine
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - ${POSTGRES_TEST_PORT}:5432

  redis:
    image: redis:7-alpine
    networks:
      - default
    ports:
      - 6379:6379
    command: redis-server --save 60 1 --loglevel warning
    volumes:
      - persistent:/data

networks:
  default:


volumes:
  persistent:
  postgres_data:
